An Exception in java is the object, that describes the Exceptional conditions, that have occured during the execution of piece of code.

========================================================================
ALgorithm for Exception handling in JAVA
1. When an exceptional condition occurs
2. Create an exception object, that describes/represents this exceptional conditions
3. This object is thrown by method in which this condition have occured.
4. The exception object is either handled by this method itself or pass it on .
5. In either way at some point this exception object will be handled.

========================================================================
Exception object can be created in two ways:
1. Exception object can be generated by Java Runtime system.
2. Exception object can be manually generated within the code.

1. The Exception object is generated by Java Runtime System, when the java related fundamentals error has occured, that voilates the rule of the java languange or the constraints of Java execution Environment.
2. The Exception object is generated manually, typically when we want to report some error condition to the caller of the method.

========================================================================
JAVA Exceptions are managed by using five keywords:
  1. try
  2. catch
  3. throw
  4. throws
  5. finally

  1. try  - The Block of code that we want to monitor for exceptions is contained within try block
  2. catch - Exception thrown by try block is handled within catch block
  3. throw - To manually throw an exception "thorw" keyword is used
  4. throws - The exception that have to be thrown out of the method, should be specified by "throws" clause
  5. finally - The block of code that absolutly need to be executed after try block completes, is put within the "finally" block.

========================================================================
Exception Types:
  All Exception types are the subclass of build-in class Throwable.

Subclasses of Throwable: Immediatly below thrwable are two branches/subclasses
  1. Exception
  2. Error

  1. Exception: 
        This class is used for the exception condition that a user programm should catch.
        This class is used to create custom exceptions as well.
        An Important subclass fof this class is RuntimeException class, 
              Exception of this type is automatically defined for the program that we write. like division by zero.

 2. Error:
        This is used to defined the exception that is not expected to be caught by user program.
        This type of exceptions are used by JAVA Runtime system.
            One example of this type is " Stack overflow".
==========================================================================
try/catch block:
  Once the exception occurs the control is thrown out of the try block, and it is transfered to the catch block.
  And the line of code in try block, after the line that have thrwn the exception will never be executed.

  In other word, since the catch block is not called, the control will never be returned.

  Once the catch block is executed, the program control will continue to the next line in the program following the try/catch block.

  The scope of catch block is restricted to the immediatly preceeded try block.

  The goal of a well contruced catch clause is to resolve the exception condition and then continue the program as if the error had never occured.

========================================================================
Displaying the error of Exception:
    Since the Throwable class has overwrited nthe toString(), the error message can by displaed simply by passing the Exception as argument.

  while using multiple catch blocks, the subclass Exception should aways be writtenn before the Superclass Exception.

    While having nested try statement, and the exceptions will the caught in the order from inner try block's catch to outer try block's catch.

    Nesting of try statements can occur in less obvious ways when method calls are involved.
    For example, you can enclose a call to a method within a try block. Inside that method is another try statement
========================================================================
throw:
    This keyword is used to throw an exception explicitly.
    General form of this statement is:
          throw ThrowableInstance

    Here ThrowableInstance is the object of type Throwable or the subclass of Throwable.

NOTE:  Primitive types, such as int or char, as well as non-Throwable classes, such as String and Object, cannot be used as exceptions.

We can obtain Throwable object in TWO ways:
  1. Using the parameter in the catch clause
  2. Using new keyword, creating one object

  




